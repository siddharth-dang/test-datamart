source_list:
  CP

target_list:
    REGIS_DIM

REGIS_DIM:
  tableName: DATAMART.REGIS_DIM
  source_data: CP
  loadingQuery: >
    SELECT
        MONOTONICALLY_INCREASING_ID() AS REGIS_KEY, REGIS_CNSM_ID AS CNSM_ID, REGIS_CITY_CODE AS CITY_CODE,
        REGIS_ID, REGIS_DATE, REGIS_LTY_ID AS LTY_ID , REGIS_CHANNEL , REGIS_GENDER ,REGIS_CITY ,INS_DT
    FROM
      (SELECT
        DISTINCT REGIS_CNSM_ID, CAST(REGIS_CITY_CODE AS SMALL_INT), CAST(REGIS_ID AS INTEGER),
        REGIS_LTY_ID, REGIS_DATE, REGIS_CHANNEL, REGIS_GENDER, REGIS_CITY ,INS_DT
      FROM
        CP
      WHERE
        INS_DT=CURRENT_DATE
    ) CP
      

source_list1:
  -SmartButton (TransactionsData)
  -OL
  -OrchestrationLayer (RewardsData)
  -CP
  -CustomerPortal (CustomerData)
  -ADDR
  -Address(MongoDB)


SB:
  mysql_conf:
    dbtable: testdb.TRANSACTIONSYNC
    partition_column: App_Transaction_Id
    query: "(select * from testdb.TRANSACTIONSYNC where Internal_Member_Id = 'PC7135361') as t"


s3_conf:
  s3_bucket: siddharth-bigdata
  datalake_path: datalake

sftp_conf:
    filetype: csv
    delimiter: |
    directory: /home/ubuntu/data



mongodb_config:
  database: customer_address
  collection: address

redshift_conf:
  filetype: csv
  delimiter: |
  dbtable: PUBLIC.TXN_FCT
  query: SELECT txn_id, create_time, amount, cust_id from PUBLIC.TXN_FCT

spark_sql_demo:
  agg_demo: >
    select
        AccountNumber,
        UniqueTransactionDescriptions,
        sort_array(UniqueTransactionDescriptions, false) as OrderedUniqueTransactionDescriptions,
        size(UniqueTransactionDescriptions) as CountOfUniqueTransactionTypes,
        array_contains(UniqueTransactionDescriptions, 'Movies') as WentToMovies
    from
        agg_finances


  case_when_demo: >
    select
        company,
        employee.firstName as firstName,
        case
            when company = 'FamilyCo' then 'Premium'
            when company = 'OldCo' then 'Legacy'
            else 'Standard'
        end as Tier
    from
        employees
